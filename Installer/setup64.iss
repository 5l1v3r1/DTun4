; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "DTun4"
#define MyAppVersion "4.0"
#define MyAppPublisher "Disa"
#define MyAppURL "http://dtun4.disahome.me"
#define MyAppExeName "DTun4Launcher.exe"

[Setup]
PrivilegesRequired=admin
;AlwaysRestart =yes
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{FF263BFC-76D4-4EDA-9B7F-6CD623D0DA18}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}
LicenseFile=license.txt
OutputDir=DTun4Files
OutputBaseFilename=setup64
Compression=lzma
SolidCompression=yes

[Languages]
Name: en; MessagesFile: compiler:Default.isl

[Tasks]
Name: desktopicon; Description: {cm:CreateDesktopIcon}; GroupDescription: {cm:AdditionalIcons}; Flags: unchecked
Name: runonstartup; Description: Start DTun4 when Windows starts; Flags: checkedonce; Languages: 

[Files]
Source: DTun4Launcher.exe; DestDir: {app}; Flags: ignoreversion
Source: DTun4.exe; DestDir: {app}; Flags: ignoreversion
Source: DTun4ClientLibrary.dll; DestDir: {app}; Flags: ignoreversion
Source: PacketDotNet.dll; DestDir: {app}; Flags: ignoreversion
Source: SharpPcap.dll; DestDir: {app}; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files
Source: tap-win64\InstallDTun4Adapter.exe; DestDir: {app}\tap-install; Flags: ignoreversion
Source: tap-win64\OemWin2k.inf; DestDir: {app}\tap-install; Flags: ignoreversion
Source: tap-win64\tap0901.sys; DestDir: {app}\tap-install; Flags: ignoreversion
Source: tap-win64\tap0901.cat; DestDir: {app}\tap-install; Flags: ignoreversion
Source: tap-win64\devcon.exe; DestDir: {app}\tap-install; Flags: ignoreversion
Source: tap-win64\license.txt; DestDir: {app}\tap-install; Flags: ignoreversion
Source: MahApps.Metro.dll; DestDir: {app}; Flags: ignoreversion
Source: System.Windows.Interactivity.dll; DestDir: {app}; Flags: ignoreversion

[Icons]
Name: {group}\{#MyAppName}; Filename: {app}\{#MyAppExeName}
Name: {group}\{cm:UninstallProgram,{#MyAppName}}; Filename: {uninstallexe}
Name: {commondesktop}\{#MyAppName}; Filename: {app}\{#MyAppExeName}; Tasks: desktopicon
Name: {commonstartup}\{#MyAppExeName}; Filename: {app}\DTun4Launcher.exe; WorkingDir: {app}; IconFilename: {app}\DTun4.exe; IconIndex: 0; Tasks: runonstartup
[Dirs]
Name: {app}\tap-install
[UninstallRun]
Filename: {app}\tap-install\InstallDTun4Adapter.exe; Parameters: -r
[Code]
#include "products.iss"
#include "dotnetfx40full.iss"

function IsDotNetDetected(version: string; service: cardinal): boolean;
// Indicates whether the specified version and service pack of the .NET Framework is installed.
//
// version -- Specify one of these strings for the required .NET Framework version:
//    'v1.1.4322'     .NET Framework 1.1
//    'v2.0.50727'    .NET Framework 2.0
//    'v3.0'          .NET Framework 3.0
//    'v3.5'          .NET Framework 3.5
//    'v4\Client'     .NET Framework 4.0 Client Profile
//    'v4\Full'       .NET Framework 4.0 Full Installation
//    'v4.5'          .NET Framework 4.5
//
// service -- Specify any non-negative integer for the required service pack level:
//    0               No service packs required
//    1, 2, etc.      Service pack 1, 2, etc. required
var
    key: string;
    install, release, serviceCount: cardinal;
    check45, success: boolean;
begin
    // .NET 4.5 installs as update to .NET 4.0 Full
    if version = 'v4.5' then begin
        version := 'v4\Full';
        check45 := true;
    end else
        check45 := false;

    // installation key group for all .NET versions
    key := 'SOFTWARE\Microsoft\NET Framework Setup\NDP\' + version;

    // .NET 3.0 uses value InstallSuccess in subkey Setup
    if Pos('v3.0', version) = 1 then begin
        success := RegQueryDWordValue(HKLM, key + '\Setup', 'InstallSuccess', install);
    end else begin
        success := RegQueryDWordValue(HKLM, key, 'Install', install);
    end;

    // .NET 4.0/4.5 uses value Servicing instead of SP
    if Pos('v4', version) = 1 then begin
        success := success and RegQueryDWordValue(HKLM, key, 'Servicing', serviceCount);
    end else begin
        success := success and RegQueryDWordValue(HKLM, key, 'SP', serviceCount);
    end;

    // .NET 4.5 uses additional value Release
    if check45 then begin
        success := success and RegQueryDWordValue(HKLM, key, 'Release', release);
        success := success and (release >= 378389);
    end;

    result := success and (install = 1) and (serviceCount >= service);
end;


function InitializeSetup(): Boolean;
begin
    if not IsDotNetDetected('v4\Client', 0) then begin
        MsgBox('DTun4 requires Microsoft .NET Framework 4.0 Client.'#13#13
            'Installer will now download .NET Framework', mbInformation, MB_OK);
        dotnetfx40full();
        result := true;
    end else
		//MsgBox('.NET Framework 4.0 is installed. You can continue.',mbInformation, MB_OK);
        result := true;
end;
[Run]
Filename: {app}\tap-install\InstallDTun4Adapter.exe; WorkingDir: {app}\tap-install; StatusMsg: Installing network adapter
Filename: http://www.winpcap.org/install/default.htm; Description: Install WinPcap; Flags: postinstall shellexec
[UninstallDelete]
Name: {app}\log.txt; Type: files
[Registry]
Root: HKCR; Subkey: DTun4; ValueType: string; ValueData: URL:DTun4; Flags: uninsdeletekey
Root: HKCR; Subkey: DTun4; ValueType: string; ValueName: URL Protocol; Flags: uninsdeletekey
Root: HKCR; Subkey: DTun4\DefaultIcon; ValueType: string; ValueData: """c:\program Files\DTun4\DTun4.exe"""; Flags: uninsdeletekey
Root: HKCR; Subkey: DTun4\shell\open\command; ValueType: string; ValueData: """C:\Program Files\DTun4\DTun4.exe"" -updated -conn ""%1"""; Flags: uninsdeletekey
